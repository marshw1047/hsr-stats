{"ast":null,"code":"var _jsxFileName = \"/home/marshwu/repos/hsr-stats/frontend/src/Components/StdDevChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StdDevChart() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(function fetchData() {\n    async function fetchData() {\n      try {\n        const response = await fetch('your-api-endpoint');\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  const svgRef = useRef();\n  useEffect(function drawChart() {\n    const svg = d3.select(svgRef.current);\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 40\n    };\n    const width = +svg.attr('width') - margin.left - margin.right;\n    const height = +svg.attr('height') - margin.top - margin.bottom;\n    const g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    // Define the bell curve function\n    const bellCurve = d3.line().x(function (d) {\n      return x(d[0]);\n    }).y(function (d) {\n      return y(d[1]);\n    });\n    const x = d3.scaleLinear().range([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    // Scale the data to fit the chart\n    x.domain(d3.extent(data, function (d) {\n      return d.x;\n    }));\n    y.domain([0, d3.max(data, function (d) {\n      return d.y;\n    })]);\n\n    // Draw the bell curve\n    g.append('path').datum(data).attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-width', 1.5).attr('d', bellCurve);\n\n    // Add X Axis\n    g.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x));\n\n    // Add Y Axis\n    g.append('g').call(d3.axisLeft(y));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    width: 600,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n_s(StdDevChart, \"yfte0lMgH4fzCcEO8wo6xUb6JyA=\");\n_c = StdDevChart;\nexport default StdDevChart;\nvar _c;\n$RefreshReg$(_c, \"StdDevChart\");","map":{"version":3,"names":["React","useEffect","useState","useRef","d3","jsxDEV","_jsxDEV","StdDevChart","_s","data","setData","fetchData","response","fetch","json","error","console","svgRef","drawChart","svg","select","current","margin","top","right","bottom","left","width","attr","height","g","append","bellCurve","line","x","d","y","scaleLinear","range","domain","extent","max","datum","call","axisBottom","axisLeft","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marshwu/repos/hsr-stats/frontend/src/Components/StdDevChart.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport * as d3 from 'd3';\n\nfunction StdDevChart() {\n  const [data, setData] = useState([]);\n\n  useEffect(function fetchData() {\n    async function fetchData() {\n      try {\n        const response = await fetch('your-api-endpoint');\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const svgRef = useRef();\n\n  useEffect(function drawChart() {\n    const svg = d3.select(svgRef.current);\n    const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n    const width = +svg.attr('width') - margin.left - margin.right;\n    const height = +svg.attr('height') - margin.top - margin.bottom;\n    const g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    // Define the bell curve function\n    const bellCurve = d3\n      .line()\n      .x(function(d) {\n        return x(d[0]);\n      })\n      .y(function(d) {\n        return y(d[1]);\n      });\n\n    const x = d3.scaleLinear().range([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    // Scale the data to fit the chart\n    x.domain(d3.extent(data, function(d) {\n      return d.x;\n    }));\n    y.domain([0, d3.max(data, function(d) {\n      return d.y;\n    })]);\n\n    // Draw the bell curve\n    g.append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', 'steelblue')\n      .attr('stroke-width', 1.5)\n      .attr('d', bellCurve);\n\n    // Add X Axis\n    g.append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x));\n\n    // Add Y Axis\n    g.append('g').call(d3.axisLeft(y));\n  }, [data]);\n\n  return <svg ref={svgRef} width={600} height={400}></svg>;\n}\n\nexport default StdDevChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}