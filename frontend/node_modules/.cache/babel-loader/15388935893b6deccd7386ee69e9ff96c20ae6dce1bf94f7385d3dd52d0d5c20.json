{"ast":null,"code":"var _jsxFileName = \"/home/marshwu/repos/hsr-stats/frontend/src/Components/Histogram.js\",\n  _s = $RefreshSig$();\nimport { Histogram, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HistogramChart() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/hsr_character_stats/1005');\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Histogram Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(Histogram, {\n        data: data,\n        type: \"monotone\",\n        dataKey: \"ATK\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\",\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"ATK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n_s(HistogramChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = HistogramChart;\nexport default HistogramChart;\nvar _c;\n$RefreshReg$(_c, \"HistogramChart\");","map":{"version":3,"names":["Histogram","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","React","useState","useEffect","jsxDEV","_jsxDEV","HistogramChart","_s","data","setData","fetchData","response","fetch","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","type","dataKey","stroke","fill","strokeDasharray","_c","$RefreshReg$"],"sources":["/home/marshwu/repos/hsr-stats/frontend/src/Components/Histogram.js"],"sourcesContent":["import { \n  Histogram, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  ResponsiveContainer } from 'recharts';\n  import React, { useState, useEffect } from 'react';\n\n  function HistogramChart() {\n    const [data, setData] = useState([]);\n  \n    useEffect(() => {\n      async function fetchData() {\n        try {\n          const response = await fetch('http://127.0.0.1:5000/hsr_character_stats/1005');\n          const data = await response.json();\n          setData(data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      }\n  \n      fetchData();\n    }, []);\n  \n    return (\n      <div>\n        <h1>Histogram Chart</h1>\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <Histogram\n            data={data}\n            type=\"monotone\"\n            dataKey=\"ATK\"\n            stroke=\"#8884d8\"\n            fill=\"#8884d8\"\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"ATK\" />\n            <YAxis />\n            <Tooltip />\n          </Histogram>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n  \n  export default HistogramChart;"],"mappings":";;AAAA,SACEA,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,mBAAmB,QAAQ,UAAU;AACrC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,eAAeO,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,CAAC;QAC9E,MAAMJ,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCJ,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IAEAJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBf,OAAA,CAACL,mBAAmB;MAACqB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5CX,OAAA,CAACV,SAAS;QACRa,IAAI,EAAEA,IAAK;QACXe,IAAI,EAAC,UAAU;QACfC,OAAO,EAAC,KAAK;QACbC,MAAM,EAAC,SAAS;QAChBC,IAAI,EAAC,SAAS;QAAAV,QAAA,gBAEdX,OAAA,CAACP,aAAa;UAAC6B,eAAe,EAAC;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCf,OAAA,CAACT,KAAK;UAAC4B,OAAO,EAAC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvBf,OAAA,CAACR,KAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTf,OAAA,CAACN,OAAO;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACb,EAAA,CApCQD,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAsCvB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}