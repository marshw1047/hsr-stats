{"ast":null,"code":"import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer}from'recharts';import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function HistogramChart(){const[data,setData]=useState([]);useEffect(()=>{async function fetchData(){try{const response=await fetch('http://127.0.0.1:5000/hsr_character_stats/1005');const rawData=await response.json();// Group ATK values into increments of 10 and count frequency within each group\nconst groupedData=rawData.reduce((accumulator,item)=>{const roundedATK=Math.round(item.ATK/100)*100;// Round to nearest 100\naccumulator[roundedATK]=(accumulator[roundedATK]||0)+1;// Count frequency\nreturn accumulator;},{});// Convert grouped data to array of objects for Recharts\nconst chartData=Object.keys(groupedData).map(key=>({ATK:parseInt(key),// Convert key back to number\nfrequency:groupedData[key]}));setData(chartData);}catch(error){console.error('Error fetching data:',error);}}fetchData();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Histogram of Kafka Attack Value\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(BarChart,{data:data,margin:{top:20,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"ATK\",type:\"category\"// Set type to category for discrete x-axis values\n,domain:['auto','auto']// Set domain to auto to include all data points\n}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\" times\"),'Frequency']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"frequency\",fill:\"#8884d8\"})]})})]});}export default HistogramChart;","map":{"version":3,"names":["BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","HistogramChart","data","setData","fetchData","response","fetch","rawData","json","groupedData","reduce","accumulator","item","roundedATK","Math","round","ATK","chartData","Object","keys","map","key","parseInt","frequency","error","console","children","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","domain","formatter","value","concat","fill"],"sources":["/home/marshwu/repos/hsr-stats/frontend/src/Components/Histogram.js"],"sourcesContent":["import { \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  ResponsiveContainer \n} from 'recharts';\nimport React, { useState, useEffect } from 'react';\n\nfunction HistogramChart() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/hsr_character_stats/1005');\n        const rawData = await response.json();\n        // Group ATK values into increments of 10 and count frequency within each group\n        const groupedData = rawData.reduce((accumulator, item) => {\n          const roundedATK = Math.round(item.ATK / 100) * 100; // Round to nearest 100\n          accumulator[roundedATK] = (accumulator[roundedATK] || 0) + 1; // Count frequency\n          return accumulator;\n        }, {});\n        // Convert grouped data to array of objects for Recharts\n        const chartData = Object.keys(groupedData).map(key => ({\n          ATK: parseInt(key), // Convert key back to number\n          frequency: groupedData[key],\n        }));\n        setData(chartData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Histogram of Kafka Attack Value</h1>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis \n            dataKey=\"ATK\" \n            type=\"category\" // Set type to category for discrete x-axis values\n            domain={['auto', 'auto']} // Set domain to auto to include all data points\n          />\n          <YAxis />\n          <Tooltip \n            formatter={(value) => [`${value} times`, 'Frequency']}\n          />\n          <Bar dataKey=\"frequency\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default HistogramChart;"],"mappings":"AAAA,OACEA,QAAQ,CACRC,GAAG,CACHC,KAAK,CACLC,KAAK,CACLC,aAAa,CACbC,OAAO,CACPC,mBAAmB,KACd,UAAU,CACjB,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAEpCC,SAAS,CAAC,IAAM,CACd,cAAe,CAAAQ,SAASA,CAAA,CAAG,CACzB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gDAAgD,CAAC,CAC9E,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CACrC;AACA,KAAM,CAAAC,WAAW,CAAGF,OAAO,CAACG,MAAM,CAAC,CAACC,WAAW,CAAEC,IAAI,GAAK,CACxD,KAAM,CAAAC,UAAU,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,GAAG,CAAG,GAAG,CAAC,CAAG,GAAG,CAAE;AACrDL,WAAW,CAACE,UAAU,CAAC,CAAG,CAACF,WAAW,CAACE,UAAU,CAAC,EAAI,CAAC,EAAI,CAAC,CAAE;AAC9D,MAAO,CAAAF,WAAW,CACpB,CAAC,CAAE,CAAC,CAAC,CAAC,CACN;AACA,KAAM,CAAAM,SAAS,CAAGC,MAAM,CAACC,IAAI,CAACV,WAAW,CAAC,CAACW,GAAG,CAACC,GAAG,GAAK,CACrDL,GAAG,CAAEM,QAAQ,CAACD,GAAG,CAAC,CAAE;AACpBE,SAAS,CAAEd,WAAW,CAACY,GAAG,CAC5B,CAAC,CAAC,CAAC,CACHlB,OAAO,CAACc,SAAS,CAAC,CACpB,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAEApB,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEJ,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxC5B,IAAA,CAACL,mBAAmB,EAACkC,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAF,QAAA,cAC5C1B,KAAA,CAACb,QAAQ,EACPe,IAAI,CAAEA,IAAK,CACX2B,MAAM,CAAE,CAAEC,GAAG,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAE,CAAEC,MAAM,CAAE,CAAE,CAAE,CAAAP,QAAA,eAEpD5B,IAAA,CAACP,aAAa,EAAC2C,eAAe,CAAC,KAAK,CAAE,CAAC,cACvCpC,IAAA,CAACT,KAAK,EACJ8C,OAAO,CAAC,KAAK,CACbC,IAAI,CAAC,UAAW;AAAA,CAChBC,MAAM,CAAE,CAAC,MAAM,CAAE,MAAM,CAAG;AAAA,CAC3B,CAAC,cACFvC,IAAA,CAACR,KAAK,GAAE,CAAC,cACTQ,IAAA,CAACN,OAAO,EACN8C,SAAS,CAAGC,KAAK,EAAK,IAAAC,MAAA,CAAID,KAAK,WAAU,WAAW,CAAE,CACvD,CAAC,cACFzC,IAAA,CAACV,GAAG,EAAC+C,OAAO,CAAC,WAAW,CAACM,IAAI,CAAC,SAAS,CAAE,CAAC,EAClC,CAAC,CACQ,CAAC,EACnB,CAAC,CAEV,CAEA,cAAe,CAAAxC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}